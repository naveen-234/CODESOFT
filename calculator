import tkinter as tk


class CalculatorApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Calculator")
        self.root.configure(bg="black")

        self.entry = tk.Entry(root, bg="black", fg="white", font=("Helvetica", 20))
        self.entry.grid(row=0, column=0, columnspan=4, padx=10, pady=10)

        self.buttons = [
            '7', '8', '9', '/',
            '4', '5', '6', '*',
            '1', '2', '3', '-',
            '0', '.', '=', '+'
        ]

        row = 1
        col = 0
        for button_text in self.buttons:
            if button_text == '=':
                tk.Button(root, text=button_text, bg="black", fg="white", font=("Helvetica", 15),
                          command=self.calculate).grid(row=row, column=col, padx=5, pady=5)
            else:
                tk.Button(root, text=button_text, bg="black", fg="white", font=("Helvetica", 15),
                          command=lambda text=button_text: self.on_button_click(text)).grid(row=row, column=col, padx=5,
                                                                                            pady=5)
            col += 1
            if col > 3:
                col = 0
                row += 1

        self.dark_mode = tk.BooleanVar()
        tk.Checkbutton(root, text="Dark Mode", bg="black", fg="white", font=("Helvetica", 12), variable=self.dark_mode,
                       command=self.toggle_dark_mode).grid(row=row, column=0, columnspan=4)

        self.is_dark_mode = False

    def on_button_click(self, text):
        current_text = self.entry.get()
        self.entry.delete(0, tk.END)
        self.entry.insert(0, current_text + text)

    def calculate(self):
        try:
            expression = self.entry.get()
            result = eval(expression)
            self.entry.delete(0, tk.END)
            self.entry.insert(0, str(result))
        except Exception:
            self.entry.delete(0, tk.END)
            self.entry.insert(0, "Error")

    def toggle_dark_mode(self):
        self.is_dark_mode = not self.is_dark_mode
        if self.is_dark_mode:
            self.root.configure(bg="black")
            for widget in self.root.winfo_children():
                widget.configure(bg="black", fg="white")
        else:
            self.root.configure(bg="white")
            for widget in self.root.winfo_children():
                widget.configure(bg="white", fg="black")


if __name__ == "__main__":
    root = tk.Tk()
    app = CalculatorApp(root)
    root.mainloop()
